// <auto-generated />
using System;
using ExamRecording.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExamRecording.DataAccess.Migrations
{
    [DbContext(typeof(ExamRecordingDbContext))]
    [Migration("20210202211403_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("ExamRecording.Models.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = 33,
                            Name = "Programming",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = 22,
                            Name = "Digital Marketing",
                            ProfessorId = 2
                        },
                        new
                        {
                            Id = 3,
                            Code = 12,
                            Name = "Information Security Management System",
                            ProfessorId = 2
                        },
                        new
                        {
                            Id = 4,
                            Code = 15,
                            Name = "Design",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 5,
                            Code = 17,
                            Name = "Software Testing",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 6,
                            Code = 11,
                            Name = "Computer Networks",
                            ProfessorId = 3
                        },
                        new
                        {
                            Id = 7,
                            Code = 25,
                            Name = "Data Science",
                            ProfessorId = 3
                        });
                });

            modelBuilder.Entity("ExamRecording.Models.Models.ExamActivity", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("FacultyRoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfExam")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("StudentGrade")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId", "FacultyRoomId");

                    b.HasIndex("CourseId");

                    b.HasIndex("FacultyRoomId");

                    b.ToTable("ExamActivities");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1,
                            FacultyRoomId = 1,
                            DateOfExam = new DateTime(2021, 2, 2, 22, 14, 3, 433, DateTimeKind.Local).AddTicks(3680),
                            Id = 1,
                            StudentGrade = 10
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 1,
                            FacultyRoomId = 1,
                            DateOfExam = new DateTime(2021, 2, 2, 22, 14, 3, 433, DateTimeKind.Local).AddTicks(4460),
                            Id = 2,
                            StudentGrade = 8
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 1,
                            FacultyRoomId = 1,
                            DateOfExam = new DateTime(2021, 2, 2, 22, 14, 3, 433, DateTimeKind.Local).AddTicks(4487),
                            Id = 3,
                            StudentGrade = 8
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 4,
                            FacultyRoomId = 2,
                            DateOfExam = new DateTime(2021, 2, 2, 22, 14, 3, 433, DateTimeKind.Local).AddTicks(4490),
                            Id = 4,
                            StudentGrade = 7
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 4,
                            FacultyRoomId = 2,
                            DateOfExam = new DateTime(2021, 2, 2, 22, 14, 3, 433, DateTimeKind.Local).AddTicks(4493),
                            Id = 5,
                            StudentGrade = 8
                        },
                        new
                        {
                            StudentId = 6,
                            CourseId = 5,
                            FacultyRoomId = 3,
                            DateOfExam = new DateTime(2021, 2, 2, 22, 14, 3, 433, DateTimeKind.Local).AddTicks(4496),
                            Id = 6,
                            StudentGrade = 9
                        },
                        new
                        {
                            StudentId = 7,
                            CourseId = 5,
                            FacultyRoomId = 3,
                            DateOfExam = new DateTime(2021, 2, 2, 22, 14, 3, 433, DateTimeKind.Local).AddTicks(4499),
                            Id = 7,
                            StudentGrade = 10
                        });
                });

            modelBuilder.Entity("ExamRecording.Models.Models.FacultyRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FacultyRoomType")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FacultyRooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FacultyRoomType = 2,
                            Location = "Location1",
                            Name = "Room1",
                            NumberOfSeats = 15
                        },
                        new
                        {
                            Id = 2,
                            FacultyRoomType = 1,
                            Location = "Location2",
                            Name = "Room2",
                            NumberOfSeats = 25
                        },
                        new
                        {
                            Id = 3,
                            FacultyRoomType = 1,
                            Location = "Location3",
                            Name = "Room3",
                            NumberOfSeats = 30
                        });
                });

            modelBuilder.Entity("ExamRecording.Models.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Billy",
                            LastName = "Bils"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Mendy",
                            LastName = "Moore"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Jeny",
                            LastName = "Jens"
                        });
                });

            modelBuilder.Entity("ExamRecording.Models.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfEnrolling")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfEnrolling = new DateTime(2021, 2, 2, 22, 14, 3, 426, DateTimeKind.Local).AddTicks(7018),
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            DateOfEnrolling = new DateTime(2021, 2, 2, 22, 14, 3, 431, DateTimeKind.Local).AddTicks(4770),
                            FirstName = "Jony",
                            LastName = "Jonies"
                        },
                        new
                        {
                            Id = 3,
                            DateOfEnrolling = new DateTime(2021, 2, 2, 22, 14, 3, 431, DateTimeKind.Local).AddTicks(4816),
                            FirstName = "Mili",
                            LastName = "Miee"
                        },
                        new
                        {
                            Id = 4,
                            DateOfEnrolling = new DateTime(2021, 2, 2, 22, 14, 3, 431, DateTimeKind.Local).AddTicks(4821),
                            FirstName = "Richi",
                            LastName = "Rich"
                        },
                        new
                        {
                            Id = 5,
                            DateOfEnrolling = new DateTime(2021, 2, 2, 22, 14, 3, 431, DateTimeKind.Local).AddTicks(4824),
                            FirstName = "Lilly",
                            LastName = "Lee"
                        },
                        new
                        {
                            Id = 6,
                            DateOfEnrolling = new DateTime(2021, 2, 2, 22, 14, 3, 431, DateTimeKind.Local).AddTicks(4827),
                            FirstName = "Mili",
                            LastName = "Mo"
                        },
                        new
                        {
                            Id = 7,
                            DateOfEnrolling = new DateTime(2021, 2, 2, 22, 14, 3, 431, DateTimeKind.Local).AddTicks(4830),
                            FirstName = "Lolita",
                            LastName = "Lolis"
                        });
                });

            modelBuilder.Entity("ExamRecording.Models.Models.Course", b =>
                {
                    b.HasOne("ExamRecording.Models.Models.Professor", "Professor")
                        .WithMany("Courses")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("ExamRecording.Models.Models.ExamActivity", b =>
                {
                    b.HasOne("ExamRecording.Models.Models.Course", "Course")
                        .WithMany("ExamActivities")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamRecording.Models.Models.FacultyRoom", "FacultyRoom")
                        .WithMany("ExamActivities")
                        .HasForeignKey("FacultyRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamRecording.Models.Models.Student", "Student")
                        .WithMany("ExamActivities")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("FacultyRoom");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExamRecording.Models.Models.Course", b =>
                {
                    b.Navigation("ExamActivities");
                });

            modelBuilder.Entity("ExamRecording.Models.Models.FacultyRoom", b =>
                {
                    b.Navigation("ExamActivities");
                });

            modelBuilder.Entity("ExamRecording.Models.Models.Professor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("ExamRecording.Models.Models.Student", b =>
                {
                    b.Navigation("ExamActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
