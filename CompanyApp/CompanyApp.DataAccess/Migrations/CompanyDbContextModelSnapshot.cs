// <auto-generated />
using System;
using CompanyApp.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompanyApp.DataAccess.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    partial class CompanyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CompanyApp.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Product1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Product2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Product3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Product4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Product5"
                        });
                });

            modelBuilder.Entity("CompanyApp.Domain.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "StoreAddress 1",
                            Manager = "John Doe",
                            Name = "Store1",
                            PhoneNumber = "070/111-111",
                            Size = 55.0,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "StoreAddress 2",
                            Manager = "John Doe",
                            Name = "Store2",
                            PhoneNumber = "070/222-222",
                            Size = 77.700000000000003,
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "StoreAddress 3",
                            Manager = "John Doe",
                            Name = "Store3",
                            PhoneNumber = "070/333-333",
                            Size = 55.5,
                            Type = 3
                        });
                });

            modelBuilder.Entity("CompanyApp.Domain.Models.SupplyActivity", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfSupply")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("StoreId", "WarehouseId", "ProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SupplyActivities");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            WarehouseId = 1,
                            ProductId = 1,
                            DateOfSupply = new DateTime(2021, 2, 2, 20, 20, 29, 816, DateTimeKind.Local).AddTicks(262),
                            Id = 1,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 1,
                            WarehouseId = 1,
                            ProductId = 2,
                            DateOfSupply = new DateTime(2021, 2, 2, 20, 20, 29, 820, DateTimeKind.Local).AddTicks(9921),
                            Id = 2,
                            Quantity = 3
                        },
                        new
                        {
                            StoreId = 1,
                            WarehouseId = 1,
                            ProductId = 3,
                            DateOfSupply = new DateTime(2021, 2, 2, 20, 20, 29, 820, DateTimeKind.Local).AddTicks(9975),
                            Id = 3,
                            Quantity = 5
                        },
                        new
                        {
                            StoreId = 2,
                            WarehouseId = 2,
                            ProductId = 4,
                            DateOfSupply = new DateTime(2021, 2, 2, 20, 20, 29, 820, DateTimeKind.Local).AddTicks(9981),
                            Id = 4,
                            Quantity = 3
                        },
                        new
                        {
                            StoreId = 3,
                            WarehouseId = 2,
                            ProductId = 4,
                            DateOfSupply = new DateTime(2021, 2, 2, 20, 20, 29, 820, DateTimeKind.Local).AddTicks(9984),
                            Id = 5,
                            Quantity = 4
                        },
                        new
                        {
                            StoreId = 3,
                            WarehouseId = 1,
                            ProductId = 5,
                            DateOfSupply = new DateTime(2021, 2, 2, 20, 20, 29, 820, DateTimeKind.Local).AddTicks(9987),
                            Id = 6,
                            Quantity = 7
                        },
                        new
                        {
                            StoreId = 3,
                            WarehouseId = 1,
                            ProductId = 2,
                            DateOfSupply = new DateTime(2021, 2, 2, 20, 20, 29, 820, DateTimeKind.Local).AddTicks(9990),
                            Id = 7,
                            Quantity = 11
                        });
                });

            modelBuilder.Entity("CompanyApp.Domain.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Warehouse1",
                            PhoneNumber = "071/111-111"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Warehouse2",
                            PhoneNumber = "071/121-212"
                        });
                });

            modelBuilder.Entity("CompanyApp.Domain.Models.SupplyActivity", b =>
                {
                    b.HasOne("CompanyApp.Domain.Models.Product", "Product")
                        .WithMany("SupplyActivities")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyApp.Domain.Models.Store", "Store")
                        .WithMany("SupplyActivities")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyApp.Domain.Models.Warehouse", "Warehouse")
                        .WithMany("SupplyActivities")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Store");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("CompanyApp.Domain.Models.Product", b =>
                {
                    b.Navigation("SupplyActivities");
                });

            modelBuilder.Entity("CompanyApp.Domain.Models.Store", b =>
                {
                    b.Navigation("SupplyActivities");
                });

            modelBuilder.Entity("CompanyApp.Domain.Models.Warehouse", b =>
                {
                    b.Navigation("SupplyActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
